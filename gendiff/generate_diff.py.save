import json
import yaml
import os
from .formatters.stylish import format_diff_as_stylish
from .formatters.plain import format_diff_as_plain
from .formatters.json import format_diff_as_json

   # Сравниваем данные и формируем результат
    def make_diff(data1, data2, parent=""):
        diff = []
        keys = sorted(set(data1.keys()) | set(data2.keys()))
        for key in keys:
            path = f"{parent}.{key}" if parent else key
            if key not in data1:
                diff.append({
                    "key": path,
                    "value": data2[key],
                    "status": "added"
                })
            elif key not in data2:
                diff.append({
                    "key": path,
                    "value": data1[key],
                    "status": "deleted"
                })
            elif data1[key] == data2[key]:
                diff.append({
                    "key": path,
                    "value": data1[key],
                    "status": "unchanged"
                })
            elif isinstance(data1[key], dict) and isinstance(data2[key], dict):
                diff.extend(make_diff(data1[key], data2[key], path))
            else:
                diff.append({
                    "key": path,
                    "old_value": data1[key],
                    "new_value": data2[key],
                    "status": "updated"
                })
        return diff

    diff = make_diff(data1, data2)


def generate_diff(filepath1, filepath2, output_format='stylish'):
    filepath1_abs = os.path.abspath(filepath1)
    filepath2_abs = os.path.abspath(filepath2)
    diff = make_diff(parse(filepath1_abs), parse(filepath2_abs))
    if output_format == 'stylish':
        return format_diff_as_stylish(diff)
    elif output_format == 'plain':
        return format_diff_as_plain(diff)
    elif output_format == 'json':
        return format_diff_as_json(diff)
    else:
        raise ValueError(f'Unknown format: {output_format}')


    # вывод
    result = "{\n"
    for item in diff:
        if item["status"] == "added":
            result += "  + {0}: {1}\n".format(item["key"], json.dumps(item["value"], indent=2, ensure_ascii=False))
        elif item["status"] == "deleted":
            result += "  - {0}: {1}\n".format(item["key"], json.dumps(item["value"], indent=2, ensure_ascii=False))
        elif item["status"] == "updated":
            result += "  - {0}: {1}\n".format(item["key"], json.dumps(item["old_value"], indent=2, ensure_ascii=False))
            result += "  + {0}: {1}\n".format(item["key"], json.dumps(item["new_value"], indent=2, ensure_ascii=False))
        else:
            result += "    {0}: {1}\n".format(item["key"], json.dumps(item["value"], indent=2, ensure_ascii=False))
    result += "}"
    return result
